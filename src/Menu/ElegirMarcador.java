/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Menu;

import piezazgraficas.ImagenesDeMarcadores;
import piezazgraficas.Marcadores;
import PiezasDeLoteria.Jugador;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.KeyStroke;

/**
 *
 * @author zelda
 */
public class ElegirMarcador extends PanelDeMenu {

    private final Jugador jugador;
    private Marcadores marcador;

    /**
     * Creates new form ElegirMarcador
     *
     * @param jugador
     */
    public ElegirMarcador(Jugador jugador) {
        initComponents();
        colocarImagenes();
        this.jugador = jugador;
        panelFrijolMouseClicked(null);
        ajustarMarcadorSecreto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelFrijol = new javax.swing.JPanel();
        cartaFrijol = new piezazgraficas.CartaGrafica();
        jLabel1 = new javax.swing.JLabel();
        panelFrijolito = new javax.swing.JPanel();
        cartaFrijolito = new piezazgraficas.CartaGrafica();
        jLabel2 = new javax.swing.JLabel();
        panelPiedrita = new javax.swing.JPanel();
        cartaPiedrita = new piezazgraficas.CartaGrafica();
        jLabel3 = new javax.swing.JLabel();
        panelArrozito = new javax.swing.JPanel();
        cartaArrozito = new piezazgraficas.CartaGrafica();
        jLabel4 = new javax.swing.JLabel();
        panelMonedita = new javax.swing.JPanel();
        cartaMonedita = new piezazgraficas.CartaGrafica();
        jLabel5 = new javax.swing.JLabel();
        panelWaifu = new javax.swing.JPanel();
        cartaWaifu = new piezazgraficas.CartaGrafica();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setOpaque(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        setLayout(new java.awt.GridBagLayout());

        panelFrijol.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelFrijol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelFrijolMouseClicked(evt);
            }
        });
        panelFrijol.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelFrijol.add(cartaFrijol, gridBagConstraints);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Frijol");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        panelFrijol.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(panelFrijol, gridBagConstraints);

        panelFrijolito.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelFrijolito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelFrijolitoMouseClicked(evt);
            }
        });
        panelFrijolito.setLayout(new java.awt.BorderLayout());
        panelFrijolito.add(cartaFrijolito, java.awt.BorderLayout.CENTER);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Frijolito");
        panelFrijolito.add(jLabel2, java.awt.BorderLayout.PAGE_END);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(panelFrijolito, gridBagConstraints);

        panelPiedrita.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelPiedrita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelPiedritaMouseClicked(evt);
            }
        });
        panelPiedrita.setLayout(new java.awt.BorderLayout());
        panelPiedrita.add(cartaPiedrita, java.awt.BorderLayout.CENTER);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Piedrita");
        panelPiedrita.add(jLabel3, java.awt.BorderLayout.PAGE_END);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(panelPiedrita, gridBagConstraints);

        panelArrozito.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelArrozito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelArrozitoMouseClicked(evt);
            }
        });
        panelArrozito.setLayout(new java.awt.BorderLayout());
        panelArrozito.add(cartaArrozito, java.awt.BorderLayout.CENTER);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Arrozito");
        panelArrozito.add(jLabel4, java.awt.BorderLayout.PAGE_END);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(panelArrozito, gridBagConstraints);

        panelMonedita.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelMonedita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelMoneditaMouseClicked(evt);
            }
        });
        panelMonedita.setLayout(new java.awt.BorderLayout());
        panelMonedita.add(cartaMonedita, java.awt.BorderLayout.CENTER);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Monedita");
        panelMonedita.add(jLabel5, java.awt.BorderLayout.PAGE_END);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(panelMonedita, gridBagConstraints);

        panelWaifu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelWaifu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelWaifuMouseClicked(evt);
            }
        });
        panelWaifu.setLayout(new java.awt.BorderLayout());
        panelWaifu.add(cartaWaifu, java.awt.BorderLayout.CENTER);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Waifu");
        panelWaifu.add(jLabel6, java.awt.BorderLayout.PAGE_END);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(panelWaifu, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Elige un marcador");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jLabel7, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        cartaArrozito.ajustarResizeRatio(this);
        cartaFrijol.ajustarResizeRatio(this);
        cartaFrijolito.ajustarResizeRatio(this);
        cartaMonedita.ajustarResizeRatio(this);
        cartaPiedrita.ajustarResizeRatio(this);
    }//GEN-LAST:event_formComponentResized

    private void panelFrijolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelFrijolMouseClicked
        marcador = Marcadores.Frijol;

        panelFrijol.setBackground(Color.orange);

        panelArrozito.setBackground(Color.gray);
        panelFrijolito.setBackground(Color.gray);
        panelMonedita.setBackground(Color.gray);
        panelPiedrita.setBackground(Color.gray);
        panelWaifu.setBackground(Color.gray);
    }//GEN-LAST:event_panelFrijolMouseClicked

    private void panelFrijolitoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelFrijolitoMouseClicked
        marcador = Marcadores.Frijolito;

        panelFrijolito.setBackground(Color.orange);

        panelArrozito.setBackground(Color.gray);
        panelFrijol.setBackground(Color.gray);
        panelMonedita.setBackground(Color.gray);
        panelPiedrita.setBackground(Color.gray);
        panelWaifu.setBackground(Color.gray);
    }//GEN-LAST:event_panelFrijolitoMouseClicked

    private void panelPiedritaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelPiedritaMouseClicked
        marcador = Marcadores.Piedrita;

        panelPiedrita.setBackground(Color.orange);

        panelArrozito.setBackground(Color.gray);
        panelFrijolito.setBackground(Color.gray);
        panelMonedita.setBackground(Color.gray);
        panelFrijol.setBackground(Color.gray);
        panelWaifu.setBackground(Color.gray);
    }//GEN-LAST:event_panelPiedritaMouseClicked

    private void panelArrozitoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelArrozitoMouseClicked
        marcador = Marcadores.Arrozito;

        panelArrozito.setBackground(Color.orange);

        panelFrijol.setBackground(Color.gray);
        panelFrijolito.setBackground(Color.gray);
        panelMonedita.setBackground(Color.gray);
        panelPiedrita.setBackground(Color.gray);
        panelWaifu.setBackground(Color.gray);
    }//GEN-LAST:event_panelArrozitoMouseClicked

    private void panelWaifuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelWaifuMouseClicked
        marcador = Marcadores.Waifu;

        panelWaifu.setBackground(Color.orange);

        panelArrozito.setBackground(Color.gray);
        panelFrijolito.setBackground(Color.gray);
        panelMonedita.setBackground(Color.gray);
        panelPiedrita.setBackground(Color.gray);
        panelFrijol.setBackground(Color.gray);
    }//GEN-LAST:event_panelWaifuMouseClicked

    private void panelMoneditaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMoneditaMouseClicked
        marcador = Marcadores.Monedita;

        panelMonedita.setBackground(Color.orange);

        panelArrozito.setBackground(Color.gray);
        panelFrijolito.setBackground(Color.gray);
        panelFrijol.setBackground(Color.gray);
        panelPiedrita.setBackground(Color.gray);
        panelWaifu.setBackground(Color.gray);
    }//GEN-LAST:event_panelMoneditaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private piezazgraficas.CartaGrafica cartaArrozito;
    private piezazgraficas.CartaGrafica cartaFrijol;
    private piezazgraficas.CartaGrafica cartaFrijolito;
    private piezazgraficas.CartaGrafica cartaMonedita;
    private piezazgraficas.CartaGrafica cartaPiedrita;
    private piezazgraficas.CartaGrafica cartaWaifu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel panelArrozito;
    private javax.swing.JPanel panelFrijol;
    private javax.swing.JPanel panelFrijolito;
    private javax.swing.JPanel panelMonedita;
    private javax.swing.JPanel panelPiedrita;
    private javax.swing.JPanel panelWaifu;
    // End of variables declaration//GEN-END:variables

    private void colocarImagenes() {
        File imagen;

        imagen = new File(ImagenesDeMarcadores.obtenerImagen(Marcadores.Arrozito));
        cartaArrozito.setImagenDir(imagen);
        cartaArrozito.ajustar();

        imagen = new File(ImagenesDeMarcadores.obtenerImagen(Marcadores.Frijol));
        cartaFrijol.setImagenDir(imagen);
        cartaFrijol.ajustar();

        imagen = new File(ImagenesDeMarcadores.obtenerImagen(Marcadores.Frijolito));
        cartaFrijolito.setImagenDir(imagen);
        cartaFrijolito.ajustar();

        imagen = new File(ImagenesDeMarcadores.obtenerImagen(Marcadores.Monedita));
        cartaMonedita.setImagenDir(imagen);
        cartaMonedita.ajustar();

        imagen = new File(ImagenesDeMarcadores.obtenerImagen(Marcadores.Piedrita));
        cartaPiedrita.setImagenDir(imagen);
        cartaPiedrita.ajustar();

        imagen = new File(ImagenesDeMarcadores.obtenerImagen(Marcadores.Waifu));
        cartaWaifu.setImagenDir(imagen);
        cartaWaifu.ajustar();
    }

    @Override
    public boolean ejecutar() {
        jugador.setMarcadorParaTarjeta(marcador);
        return true;
    }

    private void ajustarMarcadorSecreto() {
        panelWaifu.setVisible(false);

        ActionMap actionMap = getActionMap();
        int condition = JComponent.WHEN_IN_FOCUSED_WINDOW;
        InputMap inputMap = getInputMap(condition);

        //Combinacion de teclas
        ArrayList<Integer> teclas = new ArrayList<>();
        teclas.add(KeyEvent.VK_W);
        teclas.add(KeyEvent.VK_A);
        teclas.add(KeyEvent.VK_I);
        teclas.add(KeyEvent.VK_F);
        teclas.add(KeyEvent.VK_U);

        ArrayList<String> nombresTeclas = new ArrayList<>();
        nombresTeclas.add("w");
        nombresTeclas.add("a");
        nombresTeclas.add("i");
        nombresTeclas.add("f");
        nombresTeclas.add("u");

        ArrayList<Boolean> compuertas = new ArrayList<>();
        for (int tecla : teclas) {
            compuertas.add(Boolean.FALSE);
            int posicion = teclas.indexOf(tecla);
            int end = nombresTeclas.size() - 1;
            String nombre = nombresTeclas.get(posicion);

            inputMap.put(KeyStroke.getKeyStroke(tecla, 0), nombre
            );

            JPanel panel = this;
            if (posicion == 0) {
                actionMap.put(nombre, new AbstractAction() {
                    @Override
                    public void actionPerformed(ActionEvent ae) {
                        panel.requestFocus();
                        compuertas.set(0, true);
                    }
                });
            } else if (posicion > 0 && posicion < end) {
                actionMap.put(nombre, new AbstractAction() {
                    @Override
                    public void actionPerformed(ActionEvent ae) {
                        if (compuertas.get(posicion - 1)) {
                            compuertas.set(posicion, true);
                        }
                    }
                });
            } else {
                actionMap.put(nombre, new AbstractAction() {
                    @Override
                    public void actionPerformed(ActionEvent ae) {
                        if (compuertas.get(end - 1)) {
                            panelWaifu.setVisible(true);
                        }
                    }
                });
            }
        }

        this.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent ke) {
                boolean reiniciar = true;
                for (String tecla : nombresTeclas) {
                    Character c = ke.getKeyChar();
                    if (c.toString().toLowerCase().charAt(0) == tecla.charAt(0)) {
                        reiniciar = false;
                    }
                }
                if (reiniciar) {
                    System.out.println("Reiniciando...");
                    for (Boolean compuerta : compuertas) {
                        compuertas.set(compuertas.indexOf(compuerta), false);
                    }
                }
            }

            @Override
            public void keyPressed(KeyEvent ke) {

            }

            @Override
            public void keyReleased(KeyEvent ke) {

            }
        });

    }

}
