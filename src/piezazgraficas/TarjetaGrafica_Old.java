/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package piezazgraficas;

import PiezasDeLoteria.Carta;
import PiezasDeLoteria.Tarjeta;
import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;

/**
 *
 * @author Ulises Tovar
 */
public class TarjetaGrafica_Old extends javax.swing.JPanel {

    private Tarjeta tarjeta;
    private final ArrayList<CartaGrafica> cartasGraficas;
    private static final int COLUMANAS = 4;

    /**
     * Creates new form TarjetaGrafica2
     */
    public TarjetaGrafica_Old() {
        cartasGraficas = new ArrayList<>();
        initComponents();

        crearCartasGraficas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 557, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void actualizar() {

        if (tarjeta != null) {
            int numeroDeIcono = 0;
            for (CartaGrafica icono : cartasGraficas) {
                Carta c = tarjeta.getCarta(numeroDeIcono);

                icono.setImagenDir(ImagenesDeCartas.asignarImagen(c.getId()));
                icono.ajustar();

                numeroDeIcono++;
            }
        }
    }

    private void crearCartasGraficas() {
        setLayout(new GridLayout(4, COLUMANAS));

        //Crear y ajustar cada una de las cartas gr√°ficas
        for (int i = 0; i < Tarjeta.CANTIDAD_DE_CARTAS; i++) {
            CartaGrafica icono = new CartaGrafica();
            icono.setBorder(new SoftBevelBorder(BevelBorder.LOWERED));
            icono.setSize(90, 130);
            icono.ajustar();

            cartasGraficas.add(icono);
            this.add(icono);
        }
    }

    public void setTarjeta(Tarjeta tarjeta) {
        this.tarjeta = tarjeta;
    }

    public void marcarCarta(int posicion, boolean condicion) {
        if (posicion >= 0 || posicion <= Tarjeta.CANTIDAD_DE_CARTAS) {
            CartaGrafica cg = cartasGraficas.get(posicion);
            cg.setMarcada(condicion);
        }
    }

    public ArrayList<CartaGrafica> getCartasGraficas() {
        return cartasGraficas;
    }

    public Tarjeta getTarjeta() {
        return tarjeta;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
